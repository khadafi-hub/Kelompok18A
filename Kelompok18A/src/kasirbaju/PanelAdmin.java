/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package kasirbaju;

import java.awt.Color;
import java.sql.Connection;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.sql.Statement;
import java.text.DateFormat;
import java.text.ParseException;
import java.text.SimpleDateFormat;
import java.util.Date;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JFrame;
import javax.swing.JOptionPane;
import static javax.swing.SwingConstants.CENTER;
import static javax.swing.SwingConstants.TOP;
import javax.swing.table.DefaultTableModel;
import javax.swing.table.TableModel;
import static kasirbaju.PanelPersediaan.HargaTextField;
import static kasirbaju.PanelPersediaan.NamaProdukTextField;
import static kasirbaju.PanelPersediaan.PencarianTextField;
import static kasirbaju.dashboard.sqlrubah;
import static kasirbaju.PanelPersediaan.JenisTextField;
import static kasirbaju.PanelPersediaan.PersediaanTextField;

/**
 *
 * @author MDafi
 */
public class PanelAdmin extends javax.swing.JFrame {

    /**
     * Creates new form Profile
     */
    DefaultTableModel model;
    private static KoneksiDB kdb = new KoneksiDB();
    private static String pilihan = "0";
    
    
    public PanelAdmin() {
        initComponents();
        
        if(pilihan.equalsIgnoreCase("0")){
        MenuSemuaLabel.setBackground(new Color(242,37,200));
        MenuSemuaLabel.setVerticalAlignment(TOP);
        repaint();
        
        } else if(pilihan.equalsIgnoreCase("1")){
        MenuAdminLabel.setBackground(new Color(242,37,200));
        MenuAdminLabel.setVerticalAlignment(TOP);
        repaint();
        } else if(pilihan.equalsIgnoreCase("2")){
        MenuKaryawanLabel.setBackground(new Color(242,37,200));
        MenuKaryawanLabel.setVerticalAlignment(TOP);
        repaint();
        }
        
        
        kdb.koneksiDatabase();
        pilJab(pilihan);
         try {
            String sql = "SELECT * FROM akun " ;
            Statement stat = kdb.getKoneksi().createStatement();
            ResultSet hasil = stat.executeQuery(sql);
            while (hasil.next()){
                
                String NIK = hasil.getString("NIK");
                String jabatan = hasil.getString("Jabatan") ;
                String nama = hasil.getString("Nama");
                String katasandi = hasil.getString("KataSandi");
                String tanggallahir = hasil.getString("TanggalLahir");
                String gaji = hasil.getString("Gaji");
                
                model = (DefaultTableModel)ViewTable.getModel();
                
                 model.addRow(new Object[]
                    {
                        NIK,
                        jabatan,
                        nama,
                        katasandi,
                        tanggallahir,
                        gaji,
                    });
                 
                            
            }
         }catch (Exception e) {
            JOptionPane.showMessageDialog(null, "Menampilkan data GAGAL","Informasi", JOptionPane.INFORMATION_MESSAGE);
        }
         
       
        listed("", "");
        code();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
   
     public void pilJab(String pilihanMenuJabatan) {
        if (null != pilihanMenuJabatan) {
            switch (pilihanMenuJabatan) {
                case "0": {
                    //ImageIcon A= new ImageIcon(getClass().getResource("/img/dashboar.jpg"));
                    //bg.setIcon(A);
                    sqlrubah.setText("SELECT * FROM akun");
                    break;
                }
                case "1": {
                    //ImageIcon A= new ImageIcon(getClass().getResource("/img/pil1.jpg"));
                    //bg.setIcon(A);
                    sqlrubah.setText("SELECT * FROM akun WHERE Jabatan='Admin'");
                    break;
                }
                case "2": {
                    //ImageIcon A= new ImageIcon(getClass().getResource("/img/pil1.jpg"));
                    //bg.setIcon(A);
                    sqlrubah.setText("SELECT * FROM akun WHERE Jabatan='Karyawan'");
                    break;
                }
                default:
                    break;

            }
        }
        System.out.println(pilihanMenuJabatan);
    }
     
    public void Tambah(){
        if("".equals(NIKTextField.getText())||"-- PILIHAN --".equals(JabatanComboBox.getSelectedItem())||"".equals(JabatanComboBox.getSelectedItem())||"".equals(NamaTextField.getText())||"".equals(KataSandiTextField.getText())||"".equals(TanggalLahirTextField.getText())||"".equals(GajiTextField.getText())){
               JOptionPane.showMessageDialog(null, "Maaf Data Belum Lengkap");
            }
        else{
            
                if(!"".equals(NIKTextField.getText())&&!"-- PILIHAN --".equals(JabatanComboBox.getSelectedItem())&&!"".equals(JabatanComboBox.getSelectedItem())&&!"".equals(NamaTextField.getText())&&!"".equals(KataSandiTextField.getText())&&!"".equals(TanggalLahirTextField.getText())&&!"".equals(GajiTextField.getText())){
                    
                     
                    String sDate2 = TanggalLahirTextField.getText().substring(6, 10)+"-"+TanggalLahirTextField.getText().substring(3, 5)+"-"+TanggalLahirTextField.getText().substring(0, 2);
                    Date date1 = null;
                    try {
                         date1 = new SimpleDateFormat("yyyy-MM-dd").parse(sDate2);
                    } catch (ParseException ex) {
                         Logger.getLogger(PanelAdmin.class.getName()).log(Level.SEVERE, null, ex);
                         JOptionPane.showMessageDialog(null, "Masukan Tanggal Dengan Benar");
                     }
                     Date oDate = date1; 
                     DateFormat oDateFormat = new SimpleDateFormat("yyyy-MM-dd");
                     String szDate = oDateFormat.format(oDate);
                     
                    kdb.koneksiDatabase();
                    try {
                
                        Statement state = kdb.getKoneksi().createStatement();
                        state.execute("INSERT INTO akun values (" 
                        + "'" + Integer.parseInt(NIKTextField.getText()) + "',"
                        + "'" + JabatanComboBox.getSelectedItem() + "',"
                        + "'" + NamaTextField.getText() + "',"
                        + "'" + KataSandiTextField.getText() + "',"
                        + "'" + szDate + "',"
                        + "'" + Integer.parseInt(GajiTextField.getText()) +"')");
                
                        JOptionPane.showMessageDialog(null, "Berhasil Menambahkan Akun");
              

                    } catch (SQLException e) {
                        JOptionPane.showMessageDialog(null, "Gagal Menambahkan Akun");
                    }
                    
                  
                }
                else{
                    System.out.println("Data Tidak Boleh Kosong");
                }
        }
    }
    
    public void sunting(){
        SuntingLabel.setBackground(new Color(242,37,200));
        repaint();
        
        SuntingLabel.setVerticalAlignment(TOP);
        repaint();
        
        
        
        
        
        

        try { 
            String NIK = NIKTextField.getText();
            String Jabatan = (String) JabatanComboBox.getSelectedItem();
            String Nama = NamaTextField.getText();
            String KataSandi = KataSandiTextField.getText();
            String sDate2 = TanggalLahirTextField.getText().substring(6, 10)+"-"+TanggalLahirTextField.getText().substring(3, 5)+"-"+TanggalLahirTextField.getText().substring(0, 2);
                    Date date1 = null;
                    try {
                         date1 = new SimpleDateFormat("yyyy-MM-dd").parse(sDate2);
                    } catch (ParseException ex) {
                         Logger.getLogger(PanelAdmin.class.getName()).log(Level.SEVERE, null, ex);
                         JOptionPane.showMessageDialog(null, "Masukan Tanggal Dengan Benar");
                     }
                     Date oDate = date1; 
                     DateFormat oDateFormat = new SimpleDateFormat("yyyy-MM-dd");
                     String szDate = oDateFormat.format(oDate);
            String Gaji = GajiTextField.getText();
            if( ViewTable.getSelectedRow() != -1){
                String aSQL = "UPDATE akun SET `Nik`='"+NIK+"',`Jabatan`='"+Jabatan+"',`Nama`='"+Nama+"',`KataSandi`='"+KataSandi+"',`TanggalLahir`='"+szDate+"',`Gaji`='"+Gaji+"' WHERE `NIK`='"+no_id.getText()+"'";
                Statement S = kdb.getKoneksi().createStatement();
                int R = S.executeUpdate(aSQL);
                listed("","");
                JOptionPane.showMessageDialog(this, "BERHASIL DI EDIT");
                NIKTextField.setText(null);
                JabatanComboBox.setSelectedItem("-- PILIHAN --");
                NamaTextField.setText(null);
                KataSandiTextField.setText(null);
                TanggalLahirTextField.setText(null);
                GajiTextField.setText(null);

                System.out.println(aSQL);
            } else {
                JOptionPane.showMessageDialog(null, "Pilih data yang mau diedit");
            }
        
            }
        catch(Exception t){
                t.printStackTrace();
                JOptionPane.showMessageDialog(null, "data gagal diedit");
        }
        
                NIKTextField.setText(null);
                JabatanComboBox.setSelectedItem("-- PILIHAN --");
                NamaTextField.setText(null);
                KataSandiTextField.setText(null);
                TanggalLahirTextField.setText(null);
                GajiTextField.setText(null);
        
        
    }
    
    public void hapus(){
        String id1 = no_id.getText();
        
        try {
            if( ViewTable.getSelectedRow() != -1){
                String SQL="DELETE FROM akun WHERE NIK='"+id1+"'";
                Statement S = kdb.getKoneksi().createStatement();
                int R = S.executeUpdate(SQL);
                
                              
                JOptionPane.showMessageDialog(null, "Data berhasil dihapus");
             
                listed("","");
                NIKTextField.setText(null);
                JabatanComboBox.setSelectedItem("-- PILIHAN --");
                NamaTextField.setText(null);
                KataSandiTextField.setText(null);
                TanggalLahirTextField.setText(null);
                GajiTextField.setText(null);

            
            
            } else {
                JOptionPane.showMessageDialog(null, "Pilih data yang mau dihapus");
            }
            


        }catch (Exception e){
                JOptionPane.showMessageDialog(null, "Data gagal dihapus");
        }
    
    }
    
     public void code(){
        try{
            
            Connection cn1 = kdb.getKoneksi();
            String sql = "SELECT nama FROM jenisjabatan GROUP BY nama";
            Statement S = cn1.createStatement();
            ResultSet r = S.executeQuery(sql);
            
            
            while (r.next())
            {
                String cod;
                cod = r.getString(1);
                JabatanComboBox.addItem(cod);
                
            }
            
        } catch (SQLException ex) {
            System.out.println("ERROR"+ex.getMessage());
        }
        try{
            
            Connection cn1 = kdb.getKoneksi();
            String sql = "SELECT nama FROM tipepencarianadmin GROUP BY nama";
            Statement S = cn1.createStatement();
            ResultSet r = S.executeQuery(sql);
            
            
            while (r.next())
            {
                String cod;
                cod = r.getString(1);
                TipePencarianComboBox.addItem(cod);
                
            }
            
        } catch (SQLException ex) {
            System.out.println("ERROR"+ex.getMessage());
        }
    }
     
    public void listed(String tipePencarian, String cariSesuatu)
    {
        
        
        //model = (DefaultTableModel)viewTable.getModel();
        DefaultTableModel model = new DefaultTableModel();
        
        model.addColumn("NIK");
        model.addColumn("Jabatan");
        model.addColumn("Nama");
        model.addColumn("Kata Sandi");
        model.addColumn("Tanggal Lahir");
        model.addColumn("Gaji");
        
        try{   
        Connection cn1 = kdb.getKoneksi();
        Statement S;
        ResultSet r = null;
            
        String sql = sqlrubah.getText();
        if(!"".equals(TipePencarianComboBox.getSelectedItem()) && !"".equalsIgnoreCase(PencarianTextField.getText())){
            try{
            PreparedStatement pst;
            String sqlPil = sqlrubah.getText();
            
            String condition0 =  "SELECT * FROM akun";
            String untuk0 = " WHERE "+tipePencarian+" Like ?";
            String untuk1_9 = " AND "+tipePencarian+" Like ?";
            String sqlFinal = "";
                
                if(sqlPil.equalsIgnoreCase(condition0)){
                        sqlFinal = sqlPil + untuk0;
                        System.out.println(sqlFinal);
                        pst = kdb.getKoneksi().prepareStatement(sqlFinal);
                        System.out.println("lewt 1_1");
                        pst.setString(1, "%"+cariSesuatu+"%");
                        System.out.println(pst);
                        r = pst.executeQuery();
                } else {
                        sqlFinal = sqlPil + untuk1_9;
                        System.out.println(sqlFinal);
                        pst = kdb.getKoneksi().prepareStatement(sqlFinal);
                        System.out.println("lewt 2_1");
                        pst.setString(1, "%"+cariSesuatu+"%");
                        System.out.println(pst);
                        r = pst.executeQuery();
                }
                
                while (r.next()){
                        model.addRow(new Object[]{
                                   r.getString(1),
                                   r.getString(2),
                                   r.getString(3),
                                   r.getString(4),
                                   r.getString(5),
                                   r.getString(6),
                           });
                        }
                ViewTable.setModel(model);
            
            } catch (SQLException ex) {
              System.out.println("ERROR"+ex.getMessage());        
            }

            } else {
                S = cn1.createStatement();
                r = S.executeQuery(sql);
                while (r.next()){
                    model.addRow(new Object[]{
                            r.getString(1),
                            r.getString(2),
                            r.getString(3),
                            r.getString(4),
                            r.getString(5),
                            r.getString(6),
                    });

                }
                  ViewTable.setModel(model);
            }
        }catch (SQLException ex) {
            System.out.println("ERROR"+ex.getMessage());
        }
           
    }
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        BackGround = new javax.swing.JPanel();
        JudulLabel = new javax.swing.JLabel();
        JudulLabel1 = new javax.swing.JLabel();
        Logo = new javax.swing.JLabel();
        DataScrollPane = new javax.swing.JScrollPane();
        ViewTable = new javax.swing.JTable();
        PencarianPanel = new javax.swing.JPanel();
        MenuSemuaLabel = new javax.swing.JLabel();
        MenuAdminLabel = new javax.swing.JLabel();
        MenuKaryawanLabel = new javax.swing.JLabel();
        TipePencarianiLabel = new javax.swing.JLabel();
        TipePencarianComboBox = new javax.swing.JComboBox<>();
        PencarianLabel = new javax.swing.JLabel();
        AskLabel = new javax.swing.JLabel();
        SuntingLabel = new javax.swing.JLabel();
        HapusLabel = new javax.swing.JLabel();
        no_id = new javax.swing.JLabel();
        TambahkanAkunPanel = new javax.swing.JPanel();
        TambahkanAkunLabel = new javax.swing.JLabel();
        NIKLabel = new javax.swing.JLabel();
        JabatanLabel = new javax.swing.JLabel();
        JabatanComboBox = new javax.swing.JComboBox<>();
        NamaLabel = new javax.swing.JLabel();
        KataSandiLabel = new javax.swing.JLabel();
        TanggalLahirLabel = new javax.swing.JLabel();
        GajiLabel = new javax.swing.JLabel();
        TambahLabel = new javax.swing.JLabel();
        AskLabel1 = new javax.swing.JLabel();
        BackLabel = new javax.swing.JLabel();
        BackGroundIcon = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        getContentPane().setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        BackGround.setBackground(new java.awt.Color(117, 84, 155));
        BackGround.setForeground(new java.awt.Color(255, 255, 255));
        BackGround.setPreferredSize(new java.awt.Dimension(1366, 773));
        BackGround.setLayout(null);

        JudulLabel.setBackground(new java.awt.Color(255, 255, 255));
        JudulLabel.setFont(new java.awt.Font("Montserrat", 0, 24)); // NOI18N
        JudulLabel.setForeground(new java.awt.Color(204, 204, 204));
        JudulLabel.setText("PANEL");
        BackGround.add(JudulLabel);
        JudulLabel.setBounds(30, 30, 90, 50);

        JudulLabel1.setBackground(new java.awt.Color(255, 255, 255));
        JudulLabel1.setFont(new java.awt.Font("Montserrat", 1, 24)); // NOI18N
        JudulLabel1.setForeground(new java.awt.Color(255, 255, 255));
        JudulLabel1.setText("ADMIN");
        BackGround.add(JudulLabel1);
        JudulLabel1.setBounds(120, 30, 90, 50);

        Logo.setIcon(new javax.swing.ImageIcon(getClass().getResource("/img/icons8-admin-settings-male-64.png"))); // NOI18N
        BackGround.add(Logo);
        Logo.setBounds(210, 10, 70, 70);

        ViewTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "NIK", "Jabatan", "Nama", "Kata Sandi", "Tanggal Lahir", "Gaji"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.Object.class, java.lang.Object.class, java.lang.Object.class, java.lang.Object.class, java.lang.String.class, java.lang.Object.class
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }
        });
        ViewTable.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        ViewTable.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                ViewTableMouseClicked(evt);
            }
        });
        DataScrollPane.setViewportView(ViewTable);

        BackGround.add(DataScrollPane);
        DataScrollPane.setBounds(380, 90, 950, 310);

        PencarianPanel.setBackground(new java.awt.Color(148, 112, 189));
        PencarianPanel.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(242, 37, 200), 2));
        PencarianPanel.setForeground(new java.awt.Color(204, 204, 204));
        PencarianPanel.setOpaque(false);
        PencarianPanel.setPreferredSize(new java.awt.Dimension(100, 50));

        MenuSemuaLabel.setBackground(new java.awt.Color(51, 0, 97));
        MenuSemuaLabel.setFont(new java.awt.Font("Montserrat", 1, 18)); // NOI18N
        MenuSemuaLabel.setForeground(new java.awt.Color(255, 255, 255));
        MenuSemuaLabel.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        MenuSemuaLabel.setText("SEMUA");
        MenuSemuaLabel.setBorder(new javax.swing.border.LineBorder(new java.awt.Color(242, 37, 200), 2, true));
        MenuSemuaLabel.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        MenuSemuaLabel.setOpaque(true);
        MenuSemuaLabel.setPreferredSize(new java.awt.Dimension(85, 40));
        MenuSemuaLabel.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                MenuSemuaLabelMousePressed(evt);
            }
        });

        MenuAdminLabel.setBackground(new java.awt.Color(51, 0, 97));
        MenuAdminLabel.setFont(new java.awt.Font("Montserrat", 1, 18)); // NOI18N
        MenuAdminLabel.setForeground(new java.awt.Color(255, 255, 255));
        MenuAdminLabel.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        MenuAdminLabel.setText("ADMIN");
        MenuAdminLabel.setToolTipText("");
        MenuAdminLabel.setBorder(new javax.swing.border.LineBorder(new java.awt.Color(242, 37, 200), 2, true));
        MenuAdminLabel.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        MenuAdminLabel.setOpaque(true);
        MenuAdminLabel.setPreferredSize(new java.awt.Dimension(85, 40));
        MenuAdminLabel.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                MenuAdminLabelMouseClicked(evt);
            }
            public void mousePressed(java.awt.event.MouseEvent evt) {
                MenuAdminLabelMousePressed(evt);
            }
            public void mouseReleased(java.awt.event.MouseEvent evt) {
                MenuAdminLabelMouseReleased(evt);
            }
        });

        MenuKaryawanLabel.setBackground(new java.awt.Color(51, 0, 97));
        MenuKaryawanLabel.setFont(new java.awt.Font("Montserrat", 1, 18)); // NOI18N
        MenuKaryawanLabel.setForeground(new java.awt.Color(255, 255, 255));
        MenuKaryawanLabel.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        MenuKaryawanLabel.setText("KARYAWAN");
        MenuKaryawanLabel.setBorder(new javax.swing.border.LineBorder(new java.awt.Color(242, 37, 200), 2, true));
        MenuKaryawanLabel.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        MenuKaryawanLabel.setOpaque(true);
        MenuKaryawanLabel.setPreferredSize(new java.awt.Dimension(85, 40));
        MenuKaryawanLabel.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                MenuKaryawanLabelMousePressed(evt);
            }
        });

        TipePencarianiLabel.setBackground(new java.awt.Color(255, 255, 255));
        TipePencarianiLabel.setFont(new java.awt.Font("Montserrat", 1, 24)); // NOI18N
        TipePencarianiLabel.setForeground(new java.awt.Color(255, 255, 255));
        TipePencarianiLabel.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        TipePencarianiLabel.setText("Tipe Pencarian");

        TipePencarianComboBox.setFont(new java.awt.Font("Myriad Pro", 0, 24)); // NOI18N
        TipePencarianComboBox.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "-- PILIHAN --" }));
        TipePencarianComboBox.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                TipePencarianComboBoxActionPerformed(evt);
            }
        });

        PencarianLabel.setBackground(new java.awt.Color(255, 255, 255));
        PencarianLabel.setFont(new java.awt.Font("Montserrat", 1, 24)); // NOI18N
        PencarianLabel.setForeground(new java.awt.Color(255, 255, 255));
        PencarianLabel.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        PencarianLabel.setText("Pencarian");
        PencarianLabel.setVerticalAlignment(javax.swing.SwingConstants.BOTTOM);

        PencarianTextField.setFont(new java.awt.Font("Myriad Pro", 0, 24)); // NOI18N
        PencarianTextField.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(117, 84, 155), 2));
        PencarianTextField.setCursor(new java.awt.Cursor(java.awt.Cursor.TEXT_CURSOR));
        PencarianTextField.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                PencarianTextFieldActionPerformed(evt);
            }
        });
        PencarianTextField.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                PencarianTextFieldKeyPressed(evt);
            }
            public void keyReleased(java.awt.event.KeyEvent evt) {
                PencarianTextFieldKeyReleased(evt);
            }
        });

        AskLabel.setBackground(new java.awt.Color(51, 0, 97));
        AskLabel.setFont(new java.awt.Font("Montserrat", 1, 18)); // NOI18N
        AskLabel.setForeground(new java.awt.Color(255, 255, 255));
        AskLabel.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        AskLabel.setText("?");
        AskLabel.setVerticalAlignment(javax.swing.SwingConstants.TOP);
        AskLabel.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(242, 37, 200)));
        AskLabel.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        AskLabel.setOpaque(true);
        AskLabel.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                AskLabelMouseClicked(evt);
            }
            public void mousePressed(java.awt.event.MouseEvent evt) {
                AskLabelMousePressed(evt);
            }
            public void mouseReleased(java.awt.event.MouseEvent evt) {
                AskLabelMouseReleased(evt);
            }
        });

        javax.swing.GroupLayout PencarianPanelLayout = new javax.swing.GroupLayout(PencarianPanel);
        PencarianPanel.setLayout(PencarianPanelLayout);
        PencarianPanelLayout.setHorizontalGroup(
            PencarianPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(PencarianPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(PencarianPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(TipePencarianiLabel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(PencarianLabel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(PencarianTextField)
                    .addComponent(TipePencarianComboBox, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addGap(43, 43, 43)
                .addGroup(PencarianPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(MenuAdminLabel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(MenuKaryawanLabel, javax.swing.GroupLayout.DEFAULT_SIZE, 159, Short.MAX_VALUE)
                    .addComponent(MenuSemuaLabel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addGap(14, 14, 14)
                .addComponent(AskLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 59, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );
        PencarianPanelLayout.setVerticalGroup(
            PencarianPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(PencarianPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(PencarianPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(PencarianPanelLayout.createSequentialGroup()
                        .addComponent(TipePencarianiLabel)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(TipePencarianComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, 46, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(MenuSemuaLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 60, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(PencarianPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(PencarianPanelLayout.createSequentialGroup()
                        .addComponent(PencarianLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(PencarianTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(PencarianPanelLayout.createSequentialGroup()
                        .addComponent(MenuAdminLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 60, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(MenuKaryawanLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 60, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(AskLabel, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 29, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(22, Short.MAX_VALUE))
        );

        BackGround.add(PencarianPanel);
        PencarianPanel.setBounds(590, 420, 480, 270);

        SuntingLabel.setBackground(new java.awt.Color(51, 0, 97));
        SuntingLabel.setFont(new java.awt.Font("Montserrat", 1, 36)); // NOI18N
        SuntingLabel.setForeground(new java.awt.Color(255, 255, 255));
        SuntingLabel.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        SuntingLabel.setText("SUNTING");
        SuntingLabel.setBorder(new javax.swing.border.LineBorder(new java.awt.Color(242, 37, 200), 2, true));
        SuntingLabel.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        SuntingLabel.setOpaque(true);
        SuntingLabel.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                SuntingLabelMouseClicked(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                SuntingLabelMouseExited(evt);
            }
            public void mousePressed(java.awt.event.MouseEvent evt) {
                SuntingLabelMousePressed(evt);
            }
            public void mouseReleased(java.awt.event.MouseEvent evt) {
                SuntingLabelMouseReleased(evt);
            }
        });
        BackGround.add(SuntingLabel);
        SuntingLabel.setBounds(380, 460, 190, 100);

        HapusLabel.setBackground(new java.awt.Color(51, 0, 97));
        HapusLabel.setFont(new java.awt.Font("Montserrat", 1, 36)); // NOI18N
        HapusLabel.setForeground(new java.awt.Color(255, 255, 255));
        HapusLabel.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        HapusLabel.setText("HAPUS");
        HapusLabel.setBorder(new javax.swing.border.LineBorder(new java.awt.Color(242, 37, 200), 2, true));
        HapusLabel.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        HapusLabel.setOpaque(true);
        HapusLabel.setPreferredSize(new java.awt.Dimension(90, 27));
        HapusLabel.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                HapusLabelMouseClicked(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                HapusLabelMouseExited(evt);
            }
            public void mousePressed(java.awt.event.MouseEvent evt) {
                HapusLabelMousePressed(evt);
            }
            public void mouseReleased(java.awt.event.MouseEvent evt) {
                HapusLabelMouseReleased(evt);
            }
        });
        BackGround.add(HapusLabel);
        HapusLabel.setBounds(380, 590, 190, 100);
        BackGround.add(no_id);
        no_id.setBounds(0, 0, 0, 0);

        TambahkanAkunPanel.setBackground(new java.awt.Color(148, 112, 189));
        TambahkanAkunPanel.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(242, 37, 200), 2));
        TambahkanAkunPanel.setForeground(new java.awt.Color(204, 204, 204));
        TambahkanAkunPanel.setOpaque(false);
        TambahkanAkunPanel.setPreferredSize(new java.awt.Dimension(100, 50));
        TambahkanAkunPanel.setLayout(null);

        TambahkanAkunLabel.setBackground(new java.awt.Color(255, 255, 255));
        TambahkanAkunLabel.setFont(new java.awt.Font("Montserrat", 1, 36)); // NOI18N
        TambahkanAkunLabel.setForeground(new java.awt.Color(255, 255, 255));
        TambahkanAkunLabel.setText("Tambah Akun");
        TambahkanAkunPanel.add(TambahkanAkunLabel);
        TambahkanAkunLabel.setBounds(5, 0, 340, 40);

        NIKLabel.setBackground(new java.awt.Color(255, 255, 255));
        NIKLabel.setFont(new java.awt.Font("Montserrat", 1, 20)); // NOI18N
        NIKLabel.setForeground(new java.awt.Color(255, 255, 255));
        NIKLabel.setText("NIK :");
        NIKLabel.setVerticalAlignment(javax.swing.SwingConstants.BOTTOM);
        TambahkanAkunPanel.add(NIKLabel);
        NIKLabel.setBounds(20, 80, 310, 30);

        NIKTextField.setFont(new java.awt.Font("Myriad Pro", 0, 18)); // NOI18N
        NIKTextField.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(117, 84, 155), 2));
        NIKTextField.setCursor(new java.awt.Cursor(java.awt.Cursor.TEXT_CURSOR));
        NIKTextField.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                NIKTextFieldActionPerformed(evt);
            }
        });
        TambahkanAkunPanel.add(NIKTextField);
        NIKTextField.setBounds(20, 110, 290, 40);

        JabatanLabel.setBackground(new java.awt.Color(255, 255, 255));
        JabatanLabel.setFont(new java.awt.Font("Montserrat", 1, 20)); // NOI18N
        JabatanLabel.setForeground(new java.awt.Color(255, 255, 255));
        JabatanLabel.setText("Jabatan");
        JabatanLabel.setVerticalAlignment(javax.swing.SwingConstants.BOTTOM);
        TambahkanAkunPanel.add(JabatanLabel);
        JabatanLabel.setBounds(20, 150, 310, 30);

        JabatanComboBox.setFont(new java.awt.Font("Myriad Pro", 0, 18)); // NOI18N
        JabatanComboBox.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "-- PILIHAN --" }));
        JabatanComboBox.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                JabatanComboBoxActionPerformed(evt);
            }
        });
        TambahkanAkunPanel.add(JabatanComboBox);
        JabatanComboBox.setBounds(20, 180, 290, 40);

        NamaLabel.setBackground(new java.awt.Color(255, 255, 255));
        NamaLabel.setFont(new java.awt.Font("Montserrat", 1, 20)); // NOI18N
        NamaLabel.setForeground(new java.awt.Color(255, 255, 255));
        NamaLabel.setText("Nama :");
        NamaLabel.setVerticalAlignment(javax.swing.SwingConstants.BOTTOM);
        TambahkanAkunPanel.add(NamaLabel);
        NamaLabel.setBounds(20, 220, 310, 30);

        NamaTextField.setFont(new java.awt.Font("Myriad Pro", 0, 18)); // NOI18N
        NamaTextField.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(117, 84, 155), 2));
        NamaTextField.setCursor(new java.awt.Cursor(java.awt.Cursor.TEXT_CURSOR));
        NamaTextField.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                NamaTextFieldActionPerformed(evt);
            }
        });
        TambahkanAkunPanel.add(NamaTextField);
        NamaTextField.setBounds(20, 250, 290, 40);

        KataSandiLabel.setBackground(new java.awt.Color(255, 255, 255));
        KataSandiLabel.setFont(new java.awt.Font("Montserrat", 1, 20)); // NOI18N
        KataSandiLabel.setForeground(new java.awt.Color(255, 255, 255));
        KataSandiLabel.setText("Kata Sandi :");
        KataSandiLabel.setVerticalAlignment(javax.swing.SwingConstants.BOTTOM);
        TambahkanAkunPanel.add(KataSandiLabel);
        KataSandiLabel.setBounds(20, 290, 310, 30);

        KataSandiTextField.setFont(new java.awt.Font("Myriad Pro", 0, 18)); // NOI18N
        KataSandiTextField.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(117, 84, 155), 2));
        KataSandiTextField.setCursor(new java.awt.Cursor(java.awt.Cursor.TEXT_CURSOR));
        KataSandiTextField.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                KataSandiTextFieldActionPerformed(evt);
            }
        });
        TambahkanAkunPanel.add(KataSandiTextField);
        KataSandiTextField.setBounds(20, 320, 290, 40);

        TanggalLahirLabel.setBackground(new java.awt.Color(255, 255, 255));
        TanggalLahirLabel.setFont(new java.awt.Font("Montserrat", 1, 20)); // NOI18N
        TanggalLahirLabel.setForeground(new java.awt.Color(255, 255, 255));
        TanggalLahirLabel.setText("Tanggal Lahir :");
        TanggalLahirLabel.setVerticalAlignment(javax.swing.SwingConstants.BOTTOM);
        TambahkanAkunPanel.add(TanggalLahirLabel);
        TanggalLahirLabel.setBounds(20, 360, 310, 30);

        TanggalLahirTextField.setFont(new java.awt.Font("Myriad Pro", 0, 18)); // NOI18N
        TanggalLahirTextField.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(117, 84, 155), 2));
        TanggalLahirTextField.setCursor(new java.awt.Cursor(java.awt.Cursor.TEXT_CURSOR));
        TanggalLahirTextField.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                TanggalLahirTextFieldActionPerformed(evt);
            }
        });
        TanggalLahirTextField.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                TanggalLahirTextFieldKeyReleased(evt);
            }
        });
        TambahkanAkunPanel.add(TanggalLahirTextField);
        TanggalLahirTextField.setBounds(20, 390, 290, 40);

        GajiLabel.setBackground(new java.awt.Color(255, 255, 255));
        GajiLabel.setFont(new java.awt.Font("Montserrat", 1, 20)); // NOI18N
        GajiLabel.setForeground(new java.awt.Color(255, 255, 255));
        GajiLabel.setText("Gaji :");
        GajiLabel.setVerticalAlignment(javax.swing.SwingConstants.BOTTOM);
        TambahkanAkunPanel.add(GajiLabel);
        GajiLabel.setBounds(20, 430, 310, 30);

        GajiTextField.setFont(new java.awt.Font("Myriad Pro", 0, 18)); // NOI18N
        GajiTextField.setText("TEST");
        GajiTextField.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(117, 84, 155), 2));
        GajiTextField.setCursor(new java.awt.Cursor(java.awt.Cursor.TEXT_CURSOR));
        GajiTextField.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                GajiTextFieldActionPerformed(evt);
            }
        });
        TambahkanAkunPanel.add(GajiTextField);
        GajiTextField.setBounds(20, 460, 290, 40);

        TambahLabel.setBackground(new java.awt.Color(51, 0, 97));
        TambahLabel.setFont(new java.awt.Font("Montserrat", 1, 24)); // NOI18N
        TambahLabel.setForeground(new java.awt.Color(255, 255, 255));
        TambahLabel.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        TambahLabel.setText("TAMBAH");
        TambahLabel.setBorder(new javax.swing.border.LineBorder(new java.awt.Color(242, 37, 200), 2, true));
        TambahLabel.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        TambahLabel.setOpaque(true);
        TambahLabel.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                TambahLabelMouseClicked(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                TambahLabelMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                TambahLabelMouseExited(evt);
            }
            public void mousePressed(java.awt.event.MouseEvent evt) {
                TambahLabelMousePressed(evt);
            }
            public void mouseReleased(java.awt.event.MouseEvent evt) {
                TambahLabelMouseReleased(evt);
            }
        });
        TambahkanAkunPanel.add(TambahLabel);
        TambahLabel.setBounds(20, 510, 240, 80);

        AskLabel1.setBackground(new java.awt.Color(51, 0, 97));
        AskLabel1.setFont(new java.awt.Font("Montserrat", 1, 18)); // NOI18N
        AskLabel1.setForeground(new java.awt.Color(255, 255, 255));
        AskLabel1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        AskLabel1.setText("?");
        AskLabel1.setVerticalAlignment(javax.swing.SwingConstants.TOP);
        AskLabel1.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(242, 37, 200)));
        AskLabel1.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        AskLabel1.setOpaque(true);
        AskLabel1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                AskLabel1MouseClicked(evt);
            }
            public void mousePressed(java.awt.event.MouseEvent evt) {
                AskLabel1MousePressed(evt);
            }
            public void mouseReleased(java.awt.event.MouseEvent evt) {
                AskLabel1MouseReleased(evt);
            }
        });
        TambahkanAkunPanel.add(AskLabel1);
        AskLabel1.setBounds(280, 560, 60, 30);

        BackGround.add(TambahkanAkunPanel);
        TambahkanAkunPanel.setBounds(10, 90, 350, 600);

        BackLabel.setBackground(new java.awt.Color(51, 0, 97));
        BackLabel.setFont(new java.awt.Font("Montserrat", 1, 12)); // NOI18N
        BackLabel.setForeground(new java.awt.Color(150, 114, 182));
        BackLabel.setIcon(new javax.swing.ImageIcon(getClass().getResource("/img/icons8-exit-45.png"))); // NOI18N
        BackLabel.setText("Back");
        BackLabel.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(242, 37, 200), 2));
        BackLabel.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        BackLabel.setOpaque(true);
        BackLabel.setPreferredSize(new java.awt.Dimension(136, 45));
        BackLabel.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                BackLabelMouseClicked(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                BackLabelMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                BackLabelMouseExited(evt);
            }
        });
        BackGround.add(BackLabel);
        BackLabel.setBounds(1210, 630, 110, 50);

        BackGroundIcon.setIcon(new javax.swing.ImageIcon(getClass().getResource("/img/rsz_2680024.jpg"))); // NOI18N
        BackGroundIcon.setOpaque(true);
        BackGroundIcon.setPreferredSize(new java.awt.Dimension(1366, 773));
        BackGround.add(BackGroundIcon);
        BackGroundIcon.setBounds(0, 0, 1366, 760);
        BackGround.add(sqlrubah);
        sqlrubah.setBounds(40, 0, 50, 10);

        getContentPane().add(BackGround, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, -1, -1));

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void ViewTableMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_ViewTableMouseClicked
        // TODO add your handling code here:
        try {
            int i= ViewTable.getSelectedRow();

            TableModel model = ViewTable.getModel();
            
            no_id.setText(model.getValueAt(i, 0).toString());
            NIKTextField.setText(model.getValueAt(i, 0).toString());
            JabatanComboBox.setSelectedItem(model.getValueAt(i, 1).toString());
            NamaTextField.setText(model.getValueAt(i, 2).toString());
            KataSandiTextField.setText(model.getValueAt(i, 3).toString());
            
             String sDate2 = model.getValueAt(i, 4).toString().substring(8, 10)+"/"+model.getValueAt(i, 4).toString().substring(5, 7)+"/"+model.getValueAt(i, 4).toString().substring(0, 4);
                    Date date1 = null;
                    try {
                         date1 = new SimpleDateFormat("dd/MM/yyyy").parse(sDate2);
                    } catch (ParseException ex) {
                         Logger.getLogger(PanelAdmin.class.getName()).log(Level.SEVERE, null, ex);
                         JOptionPane.showMessageDialog(null, "Masukan Tanggal Dengan Benar");
                     }
                     Date oDate = date1; 
                     DateFormat oDateFormat = new SimpleDateFormat("dd/MM/yyyy");
                     String szDate = oDateFormat.format(oDate);
            TanggalLahirTextField.setText(szDate);
            GajiTextField.setText(model.getValueAt(i, 5).toString());
            
            System.out.println("E"+no_id.getText());
        } catch (Exception ex) {
            JOptionPane.showMessageDialog(this,"waw "+ ex.getMessage());

        }
    }//GEN-LAST:event_ViewTableMouseClicked

    private void MenuAdminLabelMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_MenuAdminLabelMouseClicked
        // TODO add your handling code here:

    }//GEN-LAST:event_MenuAdminLabelMouseClicked

    private void MenuAdminLabelMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_MenuAdminLabelMousePressed
        // TODO add your handling code here:
        MenuSemuaLabel.setBackground(new Color(51,0,97));
        MenuAdminLabel.setBackground(new Color(242,37,200));
        MenuKaryawanLabel.setBackground(new Color(51,0,97));
       
        MenuSemuaLabel.setVerticalAlignment(CENTER);
        MenuAdminLabel.setVerticalAlignment(TOP);
        MenuKaryawanLabel.setVerticalAlignment(CENTER);
        
        repaint();

        pilihan = "1";
        pilJab(pilihan);

        String tipePencarian = (String) TipePencarianComboBox.getSelectedItem();
        String cariSesuatu = PencarianTextField.getText();
        listed(tipePencarian, cariSesuatu);

    }//GEN-LAST:event_MenuAdminLabelMousePressed

    private void MenuAdminLabelMouseReleased(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_MenuAdminLabelMouseReleased
        // TODO add your handling code here:

    }//GEN-LAST:event_MenuAdminLabelMouseReleased

    private void MenuKaryawanLabelMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_MenuKaryawanLabelMousePressed
        // TODO add your handling code here:
        MenuSemuaLabel.setBackground(new Color(51,0,97));
        MenuAdminLabel.setBackground(new Color(51,0,97));
        MenuKaryawanLabel.setBackground(new Color(242,37,200));
       
        MenuSemuaLabel.setVerticalAlignment(CENTER);
        MenuAdminLabel.setVerticalAlignment(CENTER);
        MenuKaryawanLabel.setVerticalAlignment(TOP);
        
        pilihan = "2";

        pilJab(pilihan);

        String tipePencarian = (String) TipePencarianComboBox.getSelectedItem();
        String cariSesuatu = PencarianTextField.getText();
        listed(tipePencarian, cariSesuatu);

    }//GEN-LAST:event_MenuKaryawanLabelMousePressed

    private void PencarianTextFieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_PencarianTextFieldActionPerformed
        // TODO add your handling code here:

    }//GEN-LAST:event_PencarianTextFieldActionPerformed

    private void PencarianTextFieldKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_PencarianTextFieldKeyPressed
        // TODO add your handling code here:

    }//GEN-LAST:event_PencarianTextFieldKeyPressed

    private void PencarianTextFieldKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_PencarianTextFieldKeyReleased
        // TODO add your handling code here:
        if(evt.getKeyCode() == java.awt.event.KeyEvent.VK_ENTER){
            DefaultTableModel model = new DefaultTableModel();

           model.addColumn("NIK");
            model.addColumn("Jabatan");
            model.addColumn("Nama");
            model.addColumn("Kata Sandi");
            model.addColumn("Tanggal Lahir");
            model.addColumn("Gaji");

            try{

                ResultSet r = null;

                
                PreparedStatement pst;
                String sqlPil = sqlrubah.getText();
                String tipePencarian = (String) TipePencarianComboBox.getSelectedItem();
                String cariSesuatu = PencarianTextField.getText();

                String condition0 =  "SELECT * FROM akun";
                    String untuk0 = " WHERE "+"("+tipePencarian+")"+" IN "+"("+"?"+")";
                    String untuk1_9 = " AND "+"("+tipePencarian+")"+" IN "+"("+"?"+")";
                    String sqlFinal = "";

                        if(sqlPil.equalsIgnoreCase(condition0)){
                                sqlFinal = sqlPil + untuk0;
                                System.out.println(sqlFinal);
                                pst = kdb.getKoneksi().prepareStatement(sqlFinal);
                                System.out.println("lewt 1_1");
                                pst.setString(1, cariSesuatu);
                                System.out.println(pst);
                                r = pst.executeQuery();
                        } else {
                                sqlFinal = sqlPil + untuk1_9;
                                System.out.println(sqlFinal);
                                pst = kdb.getKoneksi().prepareStatement(sqlFinal);
                                System.out.println("lewt 2_1");
                                pst.setString(1, cariSesuatu);
                                System.out.println(pst);
                                r = pst.executeQuery();
                        }
                
                while (r.next()){
                    model.addRow(new Object[]{
                        r.getString(1),
                        r.getString(2),
                        r.getString(3),
                        r.getString(4),
                        r.getString(5),
                        r.getString(6),
                    });
                }
                ViewTable.setModel(model);
            }catch (SQLException ex) {
                System.out.println("ERROR"+ex.getMessage());
            }

        }else {

            String tipePencarian = (String) TipePencarianComboBox.getSelectedItem();
            String cariSesuatu = PencarianTextField.getText();
            listed(tipePencarian, cariSesuatu);
        }
    }//GEN-LAST:event_PencarianTextFieldKeyReleased

    private void TipePencarianComboBoxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_TipePencarianComboBoxActionPerformed
        // TODO add your handling code here:

        String nilaicbx = (String) TipePencarianComboBox.getSelectedItem();
        System.out.println(nilaicbx);
    }//GEN-LAST:event_TipePencarianComboBoxActionPerformed

    private void AskLabelMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_AskLabelMouseClicked
        // TODO add your handling code here:
       
        JOptionPane.showMessageDialog(null, " Gunakan Fitur Pencarian Untuk Mencari Data Akun Sesuai Tipe Pencarian dan Sesuatu Yang Ingin Dicari\n\n"
                                          + " Pilih Tipe Pencarian Untuk Mencari Sesuatu Berdasarkan Tipe Pencarian, Contoh : Nama\n\n"
                                          + " Ketik Pada Kolom Pencarian Untuk Mencari Sesuatu, Contoh : Khadafi \n\n"
                                          + " Dari Contoh Di Atas, Program Akan Mencari Data Dengan Nama Yang Mengandung Huruf Khadafi \n\n"
                                          + " Tekan Enter Pada Kolom Pencarian Untuk Mencari Data Yang Lebih Spesifik \n"
                                          + " Contoh : Anda Ingin Mencari Data Dengan Nama Hanya Khadafi Tetapi Yang Keluar Adalah Semua Data Yang Mengandung Nama Khadafi Seperti Muammar Khadafi atau Muhammad Khadafi dst\n"
                                          + "          Maka Dari Itu Tekan Enter Pada Kolom Pencarian Jika Ingin Menemukan Nama Khadafi Dengan Spesifik","Informasi", JOptionPane.INFORMATION_MESSAGE);
    }//GEN-LAST:event_AskLabelMouseClicked

    private void AskLabelMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_AskLabelMousePressed
        // TODO add your handling code here:
    }//GEN-LAST:event_AskLabelMousePressed

    private void AskLabelMouseReleased(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_AskLabelMouseReleased
        // TODO add your handling code here:
    }//GEN-LAST:event_AskLabelMouseReleased

    private void JabatanComboBoxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_JabatanComboBoxActionPerformed
        // TODO add your handling code here:

        String nilaicbx = (String) JabatanComboBox.getSelectedItem();
        System.out.println(nilaicbx);

    }//GEN-LAST:event_JabatanComboBoxActionPerformed

    private void NIKTextFieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_NIKTextFieldActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_NIKTextFieldActionPerformed

    private void NamaTextFieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_NamaTextFieldActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_NamaTextFieldActionPerformed

    private void KataSandiTextFieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_KataSandiTextFieldActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_KataSandiTextFieldActionPerformed

    private void TambahLabelMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_TambahLabelMouseClicked
        // TODO add your handling code here:

    }//GEN-LAST:event_TambahLabelMouseClicked

    private void TambahLabelMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_TambahLabelMouseEntered
        // TODO add your handling code here:

    }//GEN-LAST:event_TambahLabelMouseEntered

    private void TambahLabelMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_TambahLabelMouseExited
        // TODO add your handling code here:
        TambahLabel.setBackground(new Color(51,0,97));
        repaint();

        TambahLabel.setVerticalAlignment(CENTER);
        repaint();

    }//GEN-LAST:event_TambahLabelMouseExited

    private void TambahLabelMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_TambahLabelMousePressed
        // TODO add your handling code here:
        TambahLabel.setBackground(new Color(242,37,200));
        repaint();

        TambahLabel.setVerticalAlignment(TOP);
        repaint();

        Tambah();
        listed("","");
        NIKTextField.setText(null);
        JabatanComboBox.setSelectedItem("-- PILIHAN --");
        NamaTextField.setText(null);
        KataSandiTextField.setText(null);
        TanggalLahirTextField.setText(null);
        GajiTextField.setText(null);

    }//GEN-LAST:event_TambahLabelMousePressed

    private void TambahLabelMouseReleased(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_TambahLabelMouseReleased
        // TODO add your handling code here:
        TambahLabel.setBackground(new Color(51,0,97));
        repaint();

        TambahLabel.setVerticalAlignment(CENTER);
        repaint();

    }//GEN-LAST:event_TambahLabelMouseReleased

    private void SuntingLabelMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_SuntingLabelMouseClicked
        // TODO add your handling code here:

    }//GEN-LAST:event_SuntingLabelMouseClicked

    private void SuntingLabelMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_SuntingLabelMouseExited
        // TODO add your handling code here:
        SuntingLabel.setBackground(new Color(51,0,97));
        repaint();

        SuntingLabel.setVerticalAlignment(CENTER);
        repaint();
    }//GEN-LAST:event_SuntingLabelMouseExited

    private void SuntingLabelMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_SuntingLabelMousePressed
        // TODO add your handling code here:

        SuntingLabel.setBackground(new Color(242,37,200));
        repaint();

        SuntingLabel.setVerticalAlignment(TOP);
        repaint();

        sunting();

    }//GEN-LAST:event_SuntingLabelMousePressed

    private void SuntingLabelMouseReleased(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_SuntingLabelMouseReleased
        // TODO add your handling code here:
        SuntingLabel.setBackground(new Color(51,0,97));
        repaint();

        SuntingLabel.setVerticalAlignment(CENTER);
        repaint();
    }//GEN-LAST:event_SuntingLabelMouseReleased

    private void HapusLabelMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_HapusLabelMouseClicked
        // TODO add your handling code here:

    }//GEN-LAST:event_HapusLabelMouseClicked

    private void HapusLabelMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_HapusLabelMouseExited
        // TODO add your handling code here:
        HapusLabel.setBackground(new Color(51,0,97));
        repaint();

        HapusLabel.setVerticalAlignment(CENTER);
        repaint();
    }//GEN-LAST:event_HapusLabelMouseExited

    private void HapusLabelMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_HapusLabelMousePressed
        // TODO add your handling code here:
        HapusLabel.setBackground(new Color(242,37,200));
        repaint();

        HapusLabel.setVerticalAlignment(TOP);
        repaint();

        hapus();
    }//GEN-LAST:event_HapusLabelMousePressed

    private void HapusLabelMouseReleased(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_HapusLabelMouseReleased
        // TODO add your handling code here:
        HapusLabel.setBackground(new Color(51,0,97));
        repaint();

        HapusLabel.setVerticalAlignment(CENTER);
        repaint();
    }//GEN-LAST:event_HapusLabelMouseReleased

    private void TanggalLahirTextFieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_TanggalLahirTextFieldActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_TanggalLahirTextFieldActionPerformed

    private void GajiTextFieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_GajiTextFieldActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_GajiTextFieldActionPerformed

    private void BackLabelMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_BackLabelMouseClicked
        dashboard dashB = new dashboard();
        dashB.setVisible(true);
        int state = dashB.getExtendedState();
        state &= ~JFrame.ICONIFIED;
        dashB.setExtendedState(state);
        dashB.setAlwaysOnTop(true);
        dashB.toFront();
        dashB.requestFocus();
        dashB.setAlwaysOnTop(false);

        this.dispose();
    }//GEN-LAST:event_BackLabelMouseClicked

    private void BackLabelMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_BackLabelMouseEntered
        // TODO add your handling code here:
       
    }//GEN-LAST:event_BackLabelMouseEntered

    private void BackLabelMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_BackLabelMouseExited
        // TODO add your handling code here:
       
    }//GEN-LAST:event_BackLabelMouseExited

    private void TanggalLahirTextFieldKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_TanggalLahirTextFieldKeyReleased
        // TODO add your handling code here:
       
    }//GEN-LAST:event_TanggalLahirTextFieldKeyReleased

    private void MenuSemuaLabelMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_MenuSemuaLabelMousePressed
        // TODO add your handling code here:
        
        MenuSemuaLabel.setBackground(new Color(242,37,200));
        MenuAdminLabel.setBackground(new Color(51,0,97));
        MenuKaryawanLabel.setBackground(new Color(51,0,97));
       
        MenuSemuaLabel.setVerticalAlignment(TOP);
        MenuAdminLabel.setVerticalAlignment(CENTER);
        MenuKaryawanLabel.setVerticalAlignment(CENTER);
        
        repaint();

        pilihan = "0";
        pilJab(pilihan);

        String tipePencarian = (String) TipePencarianComboBox.getSelectedItem();
        String cariSesuatu = PencarianTextField.getText();
        listed(tipePencarian, cariSesuatu);
    }//GEN-LAST:event_MenuSemuaLabelMousePressed

    private void AskLabel1MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_AskLabel1MouseClicked
        // TODO add your handling code here:
        JOptionPane.showMessageDialog(null, "* Input Semua Data Diri Yang Diminta Dari Orang Yang Ingin Didaftarkan Akunnya Dengan Benar\n\n"
                                          + "* Input NIK Calon Pemilik Akun(Tidak Boleh Sama Dengan Akun Lain)\n\n"
                                          + "* Pilih Jabatan Sebagai Admin Atau Karyawan\n\n"
                                          + "* Input Nama Calon Pemilik Akun\n\n"
                                          + "* Input Kata Sandi Calon Pemilik Akun\n\n"
                                          + "* Input Tanggal Lahir Calon Pemilik Akun Dengan Format dd/MM/YYYY\n"
                                          + "* Contoh : 31/08/1999 \n\n"
                                          + "* Input Gaji Calon Pemilik Akun\n\n"
                                          + "* Tekan Tombol \"TAMBAH\" Untuk Menambahkan Akun\n\n"
                                          + "* Tekan Tombol \"SUNTING\", Untuk Mengedit Data Pada Akun Yang Dipilih\n\n"
                                          + "* Tekan Tombol \"HAPUS\" Menghapus Akun Yang Dipilih\n\n"
                                   ,"Informasi", JOptionPane.INFORMATION_MESSAGE);
    }//GEN-LAST:event_AskLabel1MouseClicked

    private void AskLabel1MousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_AskLabel1MousePressed
        // TODO add your handling code here:
    }//GEN-LAST:event_AskLabel1MousePressed

    private void AskLabel1MouseReleased(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_AskLabel1MouseReleased
        // TODO add your handling code here:
    }//GEN-LAST:event_AskLabel1MouseReleased

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(PanelAdmin.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(PanelAdmin.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(PanelAdmin.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(PanelAdmin.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new PanelAdmin().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel AskLabel;
    private javax.swing.JLabel AskLabel1;
    private javax.swing.JPanel BackGround;
    private javax.swing.JLabel BackGroundIcon;
    private javax.swing.JLabel BackLabel;
    private javax.swing.JScrollPane DataScrollPane;
    private javax.swing.JLabel GajiLabel;
    public static final javax.swing.JTextField GajiTextField = new javax.swing.JTextField();
    private javax.swing.JLabel HapusLabel;
    private javax.swing.JComboBox<String> JabatanComboBox;
    private javax.swing.JLabel JabatanLabel;
    private javax.swing.JLabel JudulLabel;
    private javax.swing.JLabel JudulLabel1;
    private javax.swing.JLabel KataSandiLabel;
    public static final javax.swing.JTextField KataSandiTextField = new javax.swing.JTextField();
    private javax.swing.JLabel Logo;
    private javax.swing.JLabel MenuAdminLabel;
    private javax.swing.JLabel MenuKaryawanLabel;
    private javax.swing.JLabel MenuSemuaLabel;
    private javax.swing.JLabel NIKLabel;
    public static final javax.swing.JTextField NIKTextField = new javax.swing.JTextField();
    private javax.swing.JLabel NamaLabel;
    public static final javax.swing.JTextField NamaTextField = new javax.swing.JTextField();
    private javax.swing.JLabel PencarianLabel;
    private javax.swing.JPanel PencarianPanel;
    public static final javax.swing.JTextField PencarianTextField = new javax.swing.JTextField();
    private javax.swing.JLabel SuntingLabel;
    private javax.swing.JLabel TambahLabel;
    private javax.swing.JLabel TambahkanAkunLabel;
    private javax.swing.JPanel TambahkanAkunPanel;
    private javax.swing.JLabel TanggalLahirLabel;
    public static final javax.swing.JTextField TanggalLahirTextField = new javax.swing.JTextField();
    private javax.swing.JComboBox<String> TipePencarianComboBox;
    private javax.swing.JLabel TipePencarianiLabel;
    private javax.swing.JTable ViewTable;
    private javax.swing.JLabel no_id;
    public static final javax.swing.JLabel sqlrubah = new javax.swing.JLabel();
    // End of variables declaration//GEN-END:variables
}
